@import "/styles/breakpoints";

.tabs > input[type="radio"] {
	display: none;
}

.tabs > input[type="radio"] {
	&:checked {
		& + label {
			color: var(--secondary-color);
		}
	}
}

.tabs > input[id="radio-1"] {
	&:checked {
		& ~ .glider {
			transform: translateX(0);

			@include lg {
				transform: translateY(0);
			}
		}
	}
}

.tabs > input[id="radio-2"] {
	&:checked {
		& ~ .glider {
			transform: translateX(calc(100% + 12.5vw));

			@include lg {
				transform: translateY((100%));
			}
		}
	}
}

.tabs > input[id="radio-3"] {
	&:checked {
		& ~ .glider {
			// increase by 100% and double vw for each subsequent radio
			transform: translateX(calc(200% + 25vw));

			@include lg {
				transform: translateY((200%));
			}
		}
	}
}

.container {
	display: flex;
	flex-direction: column;
	row-gap: 2rem;
	width: 100%;

	@include lg {
		row-gap: 4rem;
	}
}

.workContainer {
	position: relative;
	display: flex;
	justify-content: center;
	flex-direction: column;
	row-gap: 2rem;

	@include lg {
		flex-direction: row;
		row-gap: 0;
		column-gap: 4rem;
	}
}

.tabs {
	display: flex;
	position: relative;
	column-gap: 12.5vw;
	align-self: center;

	* {
		z-index: 2;
	}

	@include lg {
		flex-direction: column;
		align-self: start;
	}
}

.tab {
	display: flex;
	align-items: center;
	justify-content: center;
	font-weight: 500;
	cursor: pointer;
	transition: color 0.4s ease-in;
	width: 25vw;

	&:hover {
		color: var(--secondary-color);
	}

	@include lg {
		height: 30vh;
		width: 2rem;
	}

	@include xl {
		height: 25vh;
	}

	@include xxl {
		height: 15vh;
	}
}

.tabs > label {
	color: var(--light-color);
}

.glider {
	position: absolute;
	display: flex;
	background-color: var(--secondary-color);
	z-index: 1;
	border-radius: 99px;
	transition: 0.4s ease-out;
	height: 0.25rem;
	width: 25vw;
	top: 100%;

	@include lg {
		height: 30vh;
		width: 0.25rem;
		top: 0;
		left: 5.5rem;
	}

	@include xl {
		height: 25vh;
	}

	@include xxl {
		height: 15vh;
	}
}

.content {
	text-align: justify;
	background: inherit;
	color: var(--light-color);
	display: flex;
	flex-direction: column;
	row-gap: 1rem;

	ul {
		list-style-type: none;
		li {
			font-weight: 300;
			margin-bottom: 1rem;
			display: flex;
			align-items: center;
			column-gap: 1rem;

			p {
				width: 100%;
			}
		}
	}

	h3 {
		color: var(--sub-color);
		text-align: center;

		@include lg {
			text-align: left;
		}
	}

	@include lg {
		width: 75%;
		padding-left: 2rem;
	}
}

.header {
	font-weight: 700;
	display: flex;
	column-gap: 0.25rem;
	justify-content: center;

	h2:nth-of-type(2) {
		color: var(--secondary-color);
	}

	@include lg {
		column-gap: 0.5rem;
		justify-content: start;
	}
}

.body {
	display: flex;
	flex-direction: column;
	row-gap: 2rem;
	margin-top: 2rem;

	p {
		font-size: 0.85rem;

		@include md {
			font-size: 1.05rem;
		}
	}

	@include lg {
		margin-top: 0;
	}
}

.stack {
	display: none;
	column-gap: 2rem;
	align-self: flex-end;

	@include lg {
		display: flex;
	}
}

.award {
	color: var(--secondary-color);
}
